// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleTracking.Repository;

namespace VehicleTracking.DataMigration.App.Migrations
{
    [DbContext(typeof(VehicleTrackingDBContext))]
    partial class VehicleTrackingDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VehicleTracking.Model.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AspNetUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .IsClustered();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleTracking.Model.VehiclePosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Vehicle_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("Vehicle_Id");

                    b.ToTable("VehiclePositions");
                });

            modelBuilder.Entity("VehicleTracking.Model.VehiclePosition", b =>
                {
                    b.HasOne("VehicleTracking.Model.Vehicle", "Vehicle")
                        .WithMany("VehiclePositions")
                        .HasForeignKey("Vehicle_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("VehicleTracking.Model.Vehicle", b =>
                {
                    b.Navigation("VehiclePositions");
                });
#pragma warning restore 612, 618
        }
    }
}
